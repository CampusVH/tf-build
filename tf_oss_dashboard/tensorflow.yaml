# Copyright 2023 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
title: TensorFlow GitHub CI Status
repo_owner: tensorflow
repo_name: tensorflow
repo_branch: master
help: >-
  This is TensorFlow's open-source build status dashboard. It tracks all GitHub
  statuses for the TensorFlow repository that are published to GitHub.

  Many of these jobs use Google's internal continuous integration systems, and
  may not report their results publicly. We're trying to make more of our
  important jobs visible to external developers, but security concerns make this
  a slow process.
categories:
  TF Official Continuous:
    - Py+CPP Test Suite - Ubuntu GPU, Python 3.9
    - Py+CPP Test Suite - Ubuntu CPU, Python 3.9
    - Code Check - Full
    - MacOS CPU Python3.9 Shard 1/2
    - MacOS CPU Python3.9 Shard 2/2
  TF Official Nightly:
    - Nightly - Android
    - Nightly - Code Check - Linux
    - Nightly - Libtensorflow - MacOS
    - Nightly - Libtensorflow - Ubuntu CPU
    - Nightly - Libtensorflow - Ubuntu GPU
    - Nightly - Libtensorflow - Windows
    - Nightly - Py+CPP Test Suite - MacOS, Python 3.8
    - Nightly - Py+CPP Test Suite - MacOS, Python 3.9
    - Nightly - Py+CPP Test Suite - MacOS, Python 3.10
    - Nightly - Py+CPP Test Suite - MacOS, Python 3.11
    - Nightly - Py+CPP Test Suite - Ubuntu CPU, Python 3.8
    - Nightly - Py+CPP Test Suite - Ubuntu CPU, Python 3.9
    - Nightly - Py+CPP Test Suite - Ubuntu CPU, Python 3.10
    - Nightly - Py+CPP Test Suite - Ubuntu CPU, Python 3.11
    - Nightly - Py+CPP Test Suite - Ubuntu GPU, Python 3.8
    - Nightly - Py+CPP Test Suite - Ubuntu GPU, Python 3.9
    - Nightly - Py+CPP Test Suite - Ubuntu GPU, Python 3.10
    - Nightly - Py+CPP Test Suite - Ubuntu GPU, Python 3.11
  Everything Else: []
  Ignorable:
    - "? / cla/google"
    - "? / Scorecard"
    - import/copybara
    - kokoro
# Don't show these at all. E.g. for jobs that have been deleted
hidden:
  - Nightly Clang - Libtensorflow - Ubuntu GPU
  - Nightly Clang - Py+CPP Test Suite - Ubuntu CPU, Python 3.8
  - Nightly Clang - Py+CPP Test Suite - Ubuntu CPU, Python 3.9
  - Nightly Clang - Py+CPP Test Suite - Ubuntu CPU, Python 3.10
  - Nightly Clang - Py+CPP Test Suite - Ubuntu CPU, Python 3.11
  - Nightly Clang - Py+CPP Test Suite - Ubuntu GPU, Python 3.8
  - Nightly Clang - Py+CPP Test Suite - Ubuntu GPU, Python 3.9
  - Nightly Clang - Py+CPP Test Suite - Ubuntu GPU, Python 3.10
  - Nightly Clang - Py+CPP Test Suite - Ubuntu GPU, Python 3.11
buildcop:
  - TF Official Continuous
  - TF Official Nightly
short_sha_length: 7
default_category: Everything Else
# Use this to determine which commits are the Nightly ones when comparing.
# Set it to false to disable all "Nightly" features (i.e. the "in nightly..."
# or "this is nightly" badge in a commit)
nightly_job_basis: Nightly - Code Check - Linux
# Configures how large a job card can grow (that is, how many dots will appear
# on it). A date tag is size 3, and a status dot is size 1.
maximum_card_size: 100
# How many commits to keep in the history
history_size: 1000
# Set to Google Analytics "Measurement ID" to enable, or disable w/ "false"
gtag: G-JTD613F3TX
# Generate SVG badges, each available at Category Name.svg, e.g.
# tensorflow.github.io/build/TF Official Continuous.svg
# They then should link to the specific section with #Category Name (spaces ok)
badges:
  - TF Official Continuous
  - TF Official Nightly
# Internal jobs are those whose result URL starts with...
internal_startswith:
  - "http://fusion"
  - "http://cl/"
# Show internal-only jobs. If false, hides the public/private indicators
internal_shown: true
